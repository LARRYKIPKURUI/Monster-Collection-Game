"""initial Migration

Revision ID: 264a8e3a3791
Revises: 
Create Date: 2025-06-15 23:43:14.780048

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '264a8e3a3791'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('monster_species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('FIRE', 'WATER', 'GRASS', 'ELECTRIC', 'EARTH', 'AIR', name='monstertype'), nullable=False),
    sa.Column('base_hp', sa.Integer(), nullable=False),
    sa.Column('base_attack', sa.Integer(), nullable=False),
    sa.Column('base_defense', sa.Integer(), nullable=False),
    sa.Column('base_speed', sa.Integer(), nullable=False),
    sa.Column('rarity', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'EPIC', 'LEGENDARY', name='monsterrarity'), nullable=False),
    sa.Column('abilities', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('money', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('battles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player1_id', sa.Integer(), nullable=False),
    sa.Column('player2_id', sa.Integer(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('battle_log', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player1_id'], ['players.id'], name=op.f('fk_battles_player1_id_players')),
    sa.ForeignKeyConstraint(['player2_id'], ['players.id'], name=op.f('fk_battles_player2_id_players')),
    sa.ForeignKeyConstraint(['winner_id'], ['players.id'], name=op.f('fk_battles_winner_id_players')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_achievements',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], name=op.f('fk_player_achievements_achievement_id_achievements')),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name=op.f('fk_player_achievements_player_id_players')),
    sa.PrimaryKeyConstraint('player_id', 'achievement_id')
    )
    op.create_table('player_monsters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('current_hp', sa.Integer(), nullable=False),
    sa.Column('max_hp', sa.Integer(), nullable=False),
    sa.Column('attack', sa.Integer(), nullable=False),
    sa.Column('defense', sa.Integer(), nullable=False),
    sa.Column('speed', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name=op.f('fk_player_monsters_player_id_players')),
    sa.ForeignKeyConstraint(['species_id'], ['monster_species.id'], name=op.f('fk_player_monsters_species_id_monster_species')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_player_id', sa.Integer(), nullable=False),
    sa.Column('to_player_id', sa.Integer(), nullable=False),
    sa.Column('offered_monster_id', sa.Integer(), nullable=False),
    sa.Column('requested_monster_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_player_id'], ['players.id'], name=op.f('fk_trades_from_player_id_players')),
    sa.ForeignKeyConstraint(['offered_monster_id'], ['player_monsters.id'], name=op.f('fk_trades_offered_monster_id_player_monsters')),
    sa.ForeignKeyConstraint(['requested_monster_id'], ['player_monsters.id'], name=op.f('fk_trades_requested_monster_id_player_monsters')),
    sa.ForeignKeyConstraint(['to_player_id'], ['players.id'], name=op.f('fk_trades_to_player_id_players')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trades')
    op.drop_table('player_monsters')
    op.drop_table('player_achievements')
    op.drop_table('battles')
    op.drop_table('players')
    op.drop_table('monster_species')
    op.drop_table('achievements')
    # ### end Alembic commands ###
